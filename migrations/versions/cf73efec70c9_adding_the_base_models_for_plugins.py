"""Adding the base models for plugins

Revision ID: cf73efec70c9
Revises: 36770e621019
Create Date: 2019-02-09 22:53:49.280194

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import project.server.plugins.types

# revision identifiers, used by Alembic.
revision = 'cf73efec70c9'
down_revision = '36770e621019'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plugin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('modified_on', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('author', sa.Unicode(), nullable=True),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('homepage', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('repository', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('tracker', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('package_name', sa.String(length=256), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('about', sa.UnicodeText(), nullable=True),
    sa.Column('icon', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('downloads', sa.Integer(), nullable=True),
    sa.Column('featured', sa.Boolean(), nullable=True),
    sa.Column('deprecated', sa.Boolean(), nullable=True),
    sa.Column('server', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('package_name')
    )
    op.create_index(op.f('ix_plugin_deprecated'), 'plugin', ['deprecated'], unique=False)
    op.create_index(op.f('ix_plugin_featured'), 'plugin', ['featured'], unique=False)
    op.create_index(op.f('ix_plugin_server'), 'plugin', ['server'], unique=False)
    op.create_table('plugin_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plugin', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('downloads', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('min_qg_version', project.server.plugins.types.Version(length=32), nullable=True),
    sa.Column('max_qg_version', project.server.plugins.types.Version(length=32), nullable=True),
    sa.Column('version', project.server.plugins.types.Version(length=32), nullable=True),
    sa.Column('changelog', sa.UnicodeText(), nullable=True),
    sa.Column('package', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('experimental', sa.Boolean(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('external_deps', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['plugin'], ['plugin.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plugin_version_approved'), 'plugin_version', ['approved'], unique=False)
    op.create_index(op.f('ix_plugin_version_experimental'), 'plugin_version', ['experimental'], unique=False)
    op.create_index(op.f('ix_plugin_version_max_qg_version'), 'plugin_version', ['max_qg_version'], unique=False)
    op.create_index(op.f('ix_plugin_version_min_qg_version'), 'plugin_version', ['min_qg_version'], unique=False)
    op.create_index(op.f('ix_plugin_version_version'), 'plugin_version', ['version'], unique=False)
    op.create_table('plugins_owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('plugin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plugin_id'], ['plugin.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('plugins_owners')
    op.drop_index(op.f('ix_plugin_version_version'), table_name='plugin_version')
    op.drop_index(op.f('ix_plugin_version_min_qg_version'), table_name='plugin_version')
    op.drop_index(op.f('ix_plugin_version_max_qg_version'), table_name='plugin_version')
    op.drop_index(op.f('ix_plugin_version_experimental'), table_name='plugin_version')
    op.drop_index(op.f('ix_plugin_version_approved'), table_name='plugin_version')
    op.drop_table('plugin_version')
    op.drop_index(op.f('ix_plugin_server'), table_name='plugin')
    op.drop_index(op.f('ix_plugin_featured'), table_name='plugin')
    op.drop_index(op.f('ix_plugin_deprecated'), table_name='plugin')
    op.drop_table('plugin')
    # ### end Alembic commands ###
